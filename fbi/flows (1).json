[
    {
        "id": "0b8787aa68eda74f",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a1f3853f45496cd1",
        "type": "function",
        "z": "0b8787aa68eda74f",
        "name": "",
        "func": "\nflow.set('req', false)\nvar ROOT = 'http://www.localhost:3970/'\nvar pld = msg.payload\nvar res = {\n    type: pld.type,\n    content : 'Invalid Request',\n    chatId : pld.chatId\n}\nif(pld.content.match(/^\\/fbi\\/\\d{1,2}$/)){\n    let spl = pld.content.split('/')[2]\n    res.content = `${ROOT}list/${spl}`\n}else if(pld.content.match(/^\\/fbi\\/\\d{1,2}\\/\\w+/i)){\n    let spl = pld.content.split('/')\n    res.content = `${ROOT}list/${spl[2]}?data=${spl[3]}`\n}else if(pld.content.match(/^\\/fbi-json\\/\\d{1,2}$/)){\n    let spl = pld.content.split('/')[2]\n    res.content = 'Processing Request'\n    flow.set('req', true)\n    flow.set('params', spl)\n    flow.set('cid', pld.chatId)\n    flow.set('type', pld.type)\n}\n// /fbi-json/3/data\nelse if(pld.content.match(/^\\/fbi-json\\/\\d{1,2}\\/\\w+$/i)){\n    let spl = pld.content.split('/')\n    res.content = 'Processing Request'\n    flow.set('req', true)\n    flow.set('params', spl[2])\n    flow.set('cid', pld.chatId)\n    flow.set('type', pld.type)\n    flow.set('filter', spl[3])\n}\nreturn {payload:res}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "9a9706e9e02e7382"
            ]
        ]
    },
    {
        "id": "ae9f40ec2c390ada",
        "type": "telegram receiver",
        "z": "0b8787aa68eda74f",
        "name": "",
        "bot": "df58785225d03088",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "a1f3853f45496cd1"
            ],
            []
        ]
    },
    {
        "id": "a914fa5d205db4e9",
        "type": "debug",
        "z": "0b8787aa68eda74f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "9a9706e9e02e7382",
        "type": "telegram sender",
        "z": "0b8787aa68eda74f",
        "name": "",
        "bot": "df58785225d03088",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1070,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "38f721765a4e849d",
        "type": "function",
        "z": "0b8787aa68eda74f",
        "name": "",
        "func": "flow.set('req', false)\nvar obj = {payload: {\n    page: flow.get('params')\n}}\nif(flow.get('filter')){\n    obj.payload.data = flow.get('filter')\n}\nreturn obj",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 480,
        "wires": [
            [
                "087cbd8811f7fa03"
            ]
        ]
    },
    {
        "id": "087cbd8811f7fa03",
        "type": "http request",
        "z": "0b8787aa68eda74f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "query",
        "url": "http://localhost:3970/json-list",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 380,
        "wires": [
            [
                "a914fa5d205db4e9",
                "03f15d79c2e2c9cf"
            ]
        ]
    },
    {
        "id": "dc7027d489c5aea2",
        "type": "switch",
        "z": "0b8787aa68eda74f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "t",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 460,
        "wires": [
            [
                "38f721765a4e849d"
            ]
        ]
    },
    {
        "id": "6f64ea32cf6491b0",
        "type": "inject",
        "z": "0b8787aa68eda74f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "f194527a9ec201cc"
            ]
        ]
    },
    {
        "id": "f194527a9ec201cc",
        "type": "function",
        "z": "0b8787aa68eda74f",
        "name": "",
        "func": "return {payload: flow.get('req')?'t':'f'}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "dc7027d489c5aea2"
            ]
        ]
    },
    {
        "id": "03f15d79c2e2c9cf",
        "type": "function",
        "z": "0b8787aa68eda74f",
        "name": "",
        "func": "var obj = {\n    type: flow.get('type'),\n    chatId : flow.get('cid'),\n    content : msg.payload\n};\n\nreturn {payload:obj}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "9a9706e9e02e7382"
            ]
        ]
    },
    {
        "id": "df58785225d03088",
        "type": "telegram bot",
        "botname": "juggbar",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    }
]